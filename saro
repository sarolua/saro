local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "DKR HUB,
   LoadingTitle = "DKR",
   LoadingSubtitle = "by Saro",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "DKR Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", nil -- Title, Image
local MainSection = Tab:CreateSection("Main")

    Rayfield:Notify({
   Title = "DKR HUB executed",
   Content = "script executed",
   Duration = 5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = ExtraTab:CreateButton({
   Name = "FLY",
   Callback = function()
       --Togglesthe Fly between on or off on every script run
_G.FlyStarted == nil then
 --Ensures this only runs once to save resources 
 _G.FlyStarted = true

 --Notifies readiness
 game.StarterGui:SetCore("SendNotification", {Title= "DKR Hub"; Text="FLY Activated"; Duration=5;})

 --The actual Fly
 local plr = game:GetService('Players').LocalPlayer
 local m = plr:GetMouse()
 m.KeyDown:connect(function(k)              
     if _G.Fly then
        if k:byte() == 32 then
        humanoid = game:GetService'Players' .LocalPlayer.Character:FindFirstChild0fClass('Humanoid')
        humanoid:ChangeState('Flying')
        wait()
        humanoid:ChangeState('Stand')               
             end          
        end
    end)
end
   end,
})

local Slider = ExtraTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
       game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local ExtraTab = Window:CreateTab("Extra", nil) -- Title, Image
local ExtraSection = Tab:CreateSection("Extra Example")

local Slider = ExtraTab:CreateSlider({
   Name = "JumpPower",
   Range = {0, 500},
   Increment = 1,
   Suffix = "Jump",
   CurrentValue = 60,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      game.Player.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
}) _G.
   end,
})")
